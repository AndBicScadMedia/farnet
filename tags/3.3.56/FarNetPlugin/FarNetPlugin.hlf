.Language=English,English (English)
.PluginContents=FAR.NET
.Options TabSize=4

@Contents
$#FAR.NET#

#FAR.NET facilities#

	~Menu~@Menu@
	~Panels menu~@MenuPanels@
	~Config menu~@MenuConfig@

#User interface features#

	~List menu~@ListMenu@
	~Input filter~@InputFilter@

#FAR.NET plugins#

    ~PowerShellFar~@<..\..\Plugins.NET\PowerShellFar\>@


@Menu
$#Menu#
~Contents~@Contents@

FAR.NET shows its menu item ".NET" in all FAR plugin menus and in the disk menu.

#Disk#

It shows the ~Panels menu~@MenuPanels@.

#Panels#

It shows the ~Panels menu~@MenuPanels@.

#Config#

It shows the ~Config menu~@MenuConfig@.

#Editor, Viewer, Dialog#

It does nothing when selected manually, but this item is used internally for
important feature "PostStep" which works in these areas, too.


@MenuPanels
$#Panels menu#
~Contents~@Contents@

#Push the panel#

If the menu is called from the FAR plugin menu (F11) and the current panel is
any FAR.NET panel of any plugin then the first menu item is "Push the panel".
When you select it the current panel is pushed to the internal panel stack for
later use and the standard FAR panel is shown. You can push any number of
panels.

#Pushed panel list#

If there are previously pushed panels in the internal stack then this menu shows
titles of these panels. When you select one then the selected panel is shown and
removed from the internal stack. The shown panel normally should have restored
its current item and settings like panel mode, sort mode and etc. Selection is
not restored.


@MenuConfig
$#Config menu#
~Contents~@Contents@

This menu allows to select and configure FAR.NET command plugins, tool plugins
(by areas) and file plugins.

#Command plugins#

It shows the ~Configure command plugins~@ConfigCommand@ menu.

#Editor plugins#

It shows the ~Configure editor plugins~@ConfigEditor@ menu.

#Filer plugins#

It shows the ~Configure filer plugins~@ConfigFiler@ menu.

#Panels tools#

It shows the ~Configure tool plugins~@ConfigTool@ menu for Panels area.

#Editor tools#

It shows the ~Configure tool plugins~@ConfigTool@ menu for Editor area.

#Viewer tools#

It shows the ~Configure tool plugins~@ConfigTool@ menu for Viewer area.

#Dialog tools#

It shows the ~Configure tool plugins~@ConfigTool@ menu for Dialog area.

#Config tools#

It shows the ~Configure tool plugins~@ConfigTool@ menu for Config area.

#Disk tools#

It shows the ~Configure disk tools~@ConfigDisk@ menu.


@ConfigTool
$#Configure tool plugins#
~Contents~@Contents@

This menu and the input box allow to edit FAR.NET plugin strings shown in the
FAR plugins menus (F11) in Panels, Editor, Viewer and Dialog areas.

#Enter# (menu)

Opens the input box where you can change the selected menu string.

#Esc# (menu)

Closes the menu.

#Input box#

In the input box you change the selected menu string. Use an ampersand to define
a hotkey. If you enter an empty string then the very original menu string will
be restored.

#.NET hotkeys#

It is recommended to set the main .NET hotkey as usual by F4 and to set other
FAR.NET hotkeys by ampersands using this way: Options \ Plugins configuration \
 .NET \ Panels tools | Editor tools | Viewer tools.


@ConfigCommand
$#Configure command plugins#
~Contents~@Contents@

This menu and the input box allow to edit FAR.NET plugin command line prefixes.

#Enter# (menu)

Opens the input box where you can change the selected prefix.

#Esc# (menu)

Closes the menu.

#Input box#

In the input box you change the selected prefix. If you enter an empty string
then the default plugin prefix is restored.


@ConfigEditor
$#Configure editor plugins#
~Contents~@Contents@

This menu and the input box allow to edit editor plugin file masks.

#Enter# (menu)

Opens the input box where you can change the file mask.

#Esc# (menu)

Closes the menu.

#Input box#

In the input box you change the file mask, see ~File masks~@:FileMasks@, exclude
masks are supported (i.e. <include>|<exclude>). If you enter an empty string
then the default plugin mask is restored.


@ConfigFiler
$#Configure filer plugins#
~Contents~@Contents@

This menu and the input box allow to edit file plugin file masks.

#Enter# (menu)

Opens the input box where you can change the file mask.

#Esc# (menu)

Closes the menu.

#Input box#

In the input box you change the file mask, see ~File masks~@:FileMasks@, exclude
masks are supported (i.e. <include>|<exclude>). If you enter an empty string
then the default plugin mask is restored.


@ConfigDisk
$#Configure disk tools#
~Contents~@Contents@

This menu only shows the list of disk tools. Currently there is nothing to
configure.


@ListMenu
$#List menu#
~Contents~@Contents@

This is basic description of all list menus. Actual keys and operations depend
on properties set by a sub-plugin.

#Enter#

Selects the current item and closes the menu. The selected item is processed by
a caller. Example: command history: the selected command is invoked.

#CtrlEnter#

Recommended key for an alternative action, i.e. it selects the current item,
closes the menu and the item is processed by a caller in alternative way.
Example: command history: the selected command is inserted into the command
line.

#Delete#

Recommended key for removing item(s) from the menu. Example: command history:
removes duplicated commands or removes the current command and etc.

#CtrlDown#

Recommended key to open an input filter dialog (if permanent filter is enabled).
Note that in this case #AltDown# does the same if you use this popular macro
(addon AltDown.reg). See also ~Input filter~@InputFilter@.

#Symbols#

Applies incremental filter immediately on typing (if incremental filter is
enabled). By default symbols * and ? are wildcards.

#Backspace#

Removes the last symbol from the current incremental filter pattern.

#ShiftBackspace#

Removes the incremental filter string completely.

#CtrlC, CtrlIns#

Copies the current item text to the clipboard.


@InputFilter
$#Input filter#
~Contents~@Contents@

Input box for a filter pattern. Pattern type depends on a sub-plugin or its
settings. Available types:

 #Regex#
 #Regex, Literal#

 regex - standard regular expression
 ?text - text is a prefix where * and ? are wildcards or #Literal#
 *text - text is a substring where * and ? are wildcards or #Literal#

 #Prefix#
 #Prefix, Literal#

 Pattern is a prefix where * and ? are wildcards or #Literal#

 #Substring#
 #Substring, Literal#

 Pattern is a substring where * and ? are wildcards or #Literal#
