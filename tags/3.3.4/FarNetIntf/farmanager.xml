<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FarNetIntf</name>
    </assembly>
    <members>
        <member name="T:FarManager.IShape">
            <summary>
            Some geometric shape
            </summary>
        </member>
        <member name="M:FarManager.IShape.Contains(FarManager.IPoint)">
            <summary>
            Does this page contains point
            </summary>
            <param name="point">a point</param>
            <returns>true, if contains</returns>
        </member>
        <member name="T:FarManager.IPoint">
            <summary>
            2D point
            </summary>
        </member>
        <member name="P:FarManager.IPoint.Pos">
            <summary>
            Position (x coordinate)
            </summary>
        </member>
        <member name="P:FarManager.IPoint.Line">
            <summary>
            Line (y coordinate)
            </summary>
        </member>
        <member name="T:FarManager.ITwoPoint">
            <summary>
            Shape which is defined by two points
            </summary>
        </member>
        <member name="P:FarManager.ITwoPoint.First">
            <summary>
            First point
            </summary>
        </member>
        <member name="P:FarManager.ITwoPoint.Last">
            <summary>
            Last point
            </summary>
        </member>
        <member name="P:FarManager.ITwoPoint.Top">
            <summary>
            Top line
            </summary>
        </member>
        <member name="P:FarManager.ITwoPoint.Left">
            <summary>
            Left pos
            </summary>
        </member>
        <member name="P:FarManager.ITwoPoint.Right">
            <summary>
            Right pos
            </summary>
        </member>
        <member name="P:FarManager.ITwoPoint.Bottom">
            <summary>
            Bottom line
            </summary>
        </member>
        <member name="P:FarManager.ITwoPoint.Width">
            <summary>
            Width of shape
            </summary>
        </member>
        <member name="P:FarManager.ITwoPoint.Height">
            <summary>
            Height of the shape
            </summary>
        </member>
        <member name="T:FarManager.IRect">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="T:FarManager.Key">
            <summary>
            Keyboard event data
            </summary>
        </member>
        <member name="T:FarManager.Controls">
            <summary>
            Represents Control key state
            </summary>
        </member>
        <member name="F:FarManager.Controls.LAlt">
            <summary>
            Left Alt down
            </summary>
        </member>
        <member name="F:FarManager.Controls.RAlt">
            <summary>
            Right Alt down
            </summary>
        </member>
        <member name="F:FarManager.Controls.LCtrl">
            <summary>
            Left Cotrol down
            </summary>
        </member>
        <member name="F:FarManager.Controls.RCtrl">
            <summary>
            Right control down
            </summary>
        </member>
        <member name="F:FarManager.Controls.Shift">
            <summary>
            Shift down
            </summary>
        </member>
        <member name="F:FarManager.Controls.NumLock">
            <summary>
            NumLock key down
            </summary>
        </member>
        <member name="F:FarManager.Controls.ScrollLock">
            <summary>
            ScrollLock key down
            </summary>
        </member>
        <member name="F:FarManager.Controls.CapsLock">
            <summary>
            Capslock key down
            </summary>
        </member>
        <member name="F:FarManager.Controls.Enhanced">
            <summary>
            Enhanced key down
            </summary>
        </member>
        <member name="F:FarManager.Controls.Ignore">
            <summary>
            Ignore key down
            </summary>
        </member>
        <member name="M:FarManager.Key.#ctor">
            <summary>
            Creates new keyboard state
            </summary>
        </member>
        <member name="F:FarManager.Key.Code">
            <summary>
            Char code of key pressed
            </summary>
        </member>
        <member name="F:FarManager.Key.Scan">
            <summary>
            Scan code of key pressed
            </summary>
        </member>
        <member name="F:FarManager.Key.Char">
            <summary>
            Character code
            </summary>
        </member>
        <member name="F:FarManager.Key.RepeatCount">
            <summary>
            Number of repeats
            </summary>
        </member>
        <member name="F:FarManager.Key.Down">
            <summary>
            Is key down
            </summary>
        </member>
        <member name="T:FarManager.IInputBox">
            <summary>
            Input box
            </summary>
            <seealso cref="M:FarManager.IFar.CreateInputBox"/>
        </member>
        <member name="M:FarManager.IInputBox.Show(System.String,System.String,System.String,System.String)">
            <summary>
            Show message box
            </summary>
            <param name="Prompt">parameter overrides property with the same name</param>
            <param name="Text">parameter overrides property with the same name</param>
            <param name="Title">parameter overrides property with the same name</param>
            <param name="History">parameter overrides property with the same name</param>
            <returns>true if OK was pressed</returns>
        </member>
        <member name="M:FarManager.IInputBox.Show">
            <summary>
            Show list boz and wait until user press OK or Cancel
            </summary>
            <returns>true if OK was pressed</returns>
        </member>
        <member name="P:FarManager.IInputBox.Text">
            <summary>
            Text to be edited
            </summary>
        </member>
        <member name="P:FarManager.IInputBox.Title">
            <summary>
            title of the box
            </summary>
        </member>
        <member name="P:FarManager.IInputBox.Prompt">
            <summary>
            Prompt text
            </summary>
        </member>
        <member name="P:FarManager.IInputBox.History">
            <summary>
            History string
            </summary>
        </member>
        <member name="P:FarManager.IInputBox.MaxLength">
            <summary>
            Maximal length of <see cref="P:FarManager.IInputBox.Text"/>
            </summary>
        </member>
        <member name="P:FarManager.IInputBox.EmptyEnabled">
            <summary>
            Enabled empty input
            </summary>
        </member>
        <member name="P:FarManager.IInputBox.IsPassword">
            <summary>
            Display asterisks instead of input characters
            </summary>
        </member>
        <member name="P:FarManager.IInputBox.EnvExpanded">
            <summary>
            Expand environment variables
            </summary>
        </member>
        <member name="P:FarManager.IInputBox.UseLastHistory">
            <summary>
            Use last history as default value
            </summary>
        </member>
        <member name="P:FarManager.IInputBox.ButtonsAreVisible">
            <summary>
            Buttons are visible
            </summary>
        </member>
        <member name="T:FarManager.IPlugin">
            <summary>
            Plugin
            </summary>
            <remarks>Plugin is controlled by 
            <see cref="P:FarManager.IPlugin.Far"/> property.
            </remarks>
            
        </member>
        <member name="P:FarManager.IPlugin.Far">
            <summary>
            Far manager application 
            </summary>
            <remarks>
            When object is set - plugin must register 
            MenuItems, prefixes, etc
            
            When null is set plugin must unregister its
            hooks
            </remarks>
        </member>
        <member name="T:FarManager.BasePlugin">
            <summary>
            Base class for all plugins
            </summary>
            <remarks>It stores reference to the FarManager and
            provides <see cref="M:FarManager.BasePlugin.Connect"/> and <see cref="M:FarManager.BasePlugin.Disconnect"/> methods
            override those methods to handle attachment and 
            detachment of plugin
            </remarks>
        </member>
        <member name="F:FarManager.BasePlugin.far">
            <summary>
            reference to the FarManager
            </summary>
        </member>
        <member name="M:FarManager.BasePlugin.Connect">
            <summary>
            Override this method to handle plugin
            startup
            </summary>
        </member>
        <member name="M:FarManager.BasePlugin.Disconnect">
            <summary>
            Override this metod to handle plugin shutdown
            </summary>
        </member>
        <member name="P:FarManager.BasePlugin.Far">
            <summary>
            <see cref="P:FarManager.IPlugin.Far"/>
            </summary>
        </member>
        <member name="T:FarManager.IMessage">
            <summary>
            Message box
            </summary>
        </member>
        <member name="M:FarManager.IMessage.Show">
            <summary>
            Show the message box
            </summary>
            <returns>Ok is pressed</returns>
        </member>
        <member name="M:FarManager.IMessage.Reset">
            <summary>
            Reset all properties to initial values
            </summary>
        </member>
        <member name="P:FarManager.IMessage.Body">
            <summary>
            Body of message
            </summary>
        </member>
        <member name="P:FarManager.IMessage.Buttons">
            <summary>
            Buttons of message box
            </summary>
        </member>
        <member name="P:FarManager.IMessage.Header">
            <summary>
            Header of message box
            </summary>
        </member>
        <member name="P:FarManager.IMessage.Selected">
            <summary>
             Index of selected <see cref="P:FarManager.IMessage.Buttons">button</see>
            </summary>
        </member>
        <member name="P:FarManager.IMessage.IsWarning">
            <summary>
            Message is warning
            </summary>
        </member>
        <member name="P:FarManager.IMessage.IsError">
            <summary>
            Message is error 
            </summary>
        </member>
        <member name="P:FarManager.IMessage.KeepBackground">
            <summary>
            Store and restore background contents
            </summary>
        </member>
        <member name="P:FarManager.IMessage.LeftAligned">
            <summary>
            Align message text to the left
            </summary>
        </member>
        <member name="T:FarManager.ISelection">
            <summary>
            Represents selection of Editor
            </summary>
        </member>
        <member name="T:FarManager.ILines">
            <summary>
            List of lines
            </summary>
        </member>
        <member name="M:FarManager.ILines.Get(System.Int32)">
            <summary>
            Get line by number
            </summary>
        </member>
        <member name="P:FarManager.ILines.First">
            <summary>
            First line
            </summary>
        </member>
        <member name="P:FarManager.ILines.Last">
            <summary>
            Last line
            </summary>
        </member>
        <member name="P:FarManager.ILines.AsString">
            <summary>
            All text as string
            </summary>
        </member>
        <member name="P:FarManager.ILines.Text">
            <summary>
            Text as string list
            </summary>
        </member>
        <member name="P:FarManager.ISelection.Shape">
            <summary>
            Shape of selection
            <see cref="M:FarManager.IFar.CreateRect(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            <see cref="M:FarManager.IFar.CreateStream(System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="T:FarManager.IStrings">
            <summary>
            List of strings
            </summary>
        </member>
        <member name="P:FarManager.IStrings.Text">
            <summary>
            Strings concatenated with CRLF
            </summary>
        </member>
        <member name="T:FarManager.ILineSelection">
            <summary>
            Selection of <see cref="T:FarManager.ILine">editor line</see>
            </summary>
        </member>
        <member name="P:FarManager.ILineSelection.Text">
            <summary>
            Text of selection
            </summary>
        </member>
        <member name="P:FarManager.ILineSelection.Left">
            <summary>
            Leftmost position of selection
            </summary>
        </member>
        <member name="P:FarManager.ILineSelection.Right">
            <summary>
            Right position of selection
            </summary>
        </member>
        <member name="P:FarManager.ILineSelection.Length">
            <summary>
            Selection length
            </summary>
        </member>
        <member name="T:FarManager.ILine">
            <summary>
            Line of <see cref="T:FarManager.IEditor">editor</see>
            </summary>
        </member>
        <member name="P:FarManager.ILine.No">
            <summary>
            Line number
            </summary>
        </member>
        <member name="P:FarManager.ILine.Text">
            <summary>
            Line text
            </summary>
        </member>
        <member name="P:FarManager.ILine.AsString">
            <summary>
            Line number
            </summary>
        </member>
        <member name="P:FarManager.ILine.EOL">
            <summary>
            end-of-line characters
            </summary>
        </member>
        <member name="P:FarManager.ILine.Selection">
            <summary>
            selected part of the line
            </summary>
        </member>
        <member name="T:FarManager.ICursor">
            <summary>
            <see cref="T:FarManager.IEditor">Editor</see> cursor position
            </summary>
        </member>
        <member name="M:FarManager.ICursor.Assign(FarManager.ICursor)">
            <summary>
            assign another cursor position
            </summary>
            <param name="o">another cursor</param>
        </member>
        <member name="P:FarManager.ICursor.Line">
            <summary>
            Line number (starting with 0)
            </summary>
        </member>
        <member name="P:FarManager.ICursor.Pos">
            <summary>
            Position 
            </summary>
        </member>
        <member name="P:FarManager.ICursor.TabPos">
            <summary>
            Position in tabs
            </summary>
        </member>
        <member name="P:FarManager.ICursor.Overtype">
            <summary>
            Overwrite
            </summary>
        </member>
        <member name="T:FarManager.OnRedrawDelegate">
            <summary>
            Delegate for <see cref="E:FarManager.IEditor.OnRedraw"/>
            </summary>
        </member>
        <member name="T:FarManager.EditorDelegate">
            <summary>
            Simple <see cref="T:FarManager.IEditor">Editor</see> event
            </summary>
        </member>
        <member name="T:FarManager.KeyDelegate">
            <summary>
            Delegate for <see cref="E:FarManager.IEditor.OnKey"/>
            </summary>
        </member>
        <member name="T:FarManager.MouseDelegate">
            <summary>
            Delegate for <see cref="E:FarManager.IEditor.OnMouse"/>
            </summary>
        </member>
        <member name="T:FarManager.IEditor">
            <summary>
            Far Editor Interface
            </summary>
        </member>
        <member name="M:FarManager.IEditor.FireOnRedraw(FarManager.IEditor,System.Int32)">
            <summary>
            Fire Redraw event
            </summary>
        </member>
        <member name="M:FarManager.IEditor.FireAfterOpen(FarManager.IEditor)">
            <summary>
            Fire Editor is opened
            </summary>
        </member>
        <member name="M:FarManager.IEditor.FireBeforeSave(FarManager.IEditor)">
            <summary>
            Fire <see cref="E:FarManager.IEditor.BeforeSave"/>
            </summary>
        </member>
        <member name="M:FarManager.IEditor.FireAfterClose(FarManager.IEditor)">
            <summary>
            file <see cref="E:FarManager.IEditor.AfterClose"/>
            </summary>
            <param name="sender">sender parameter</param>
        </member>
        <member name="M:FarManager.IEditor.FireOnKey(FarManager.IEditor,FarManager.Key)">
            <summary>
            Fire <see cref="E:FarManager.IEditor.OnKey"/>
            </summary>
            <param name="Sender">Sender editor</param>
            <param name="key">key pressed</param>
        </member>
        <member name="M:FarManager.IEditor.FireOnMouse(FarManager.IEditor,FarManager.Mouse)">
            <summary>
            Fire <see cref="E:FarManager.IEditor.OnMouse"/>
            </summary>
            <param name="Sender">Sender editor</param>
            <param name="mouse">mouse parameters</param>
        </member>
        <member name="M:FarManager.IEditor.Insert(System.String)">
            <summary>
            Insert text
            </summary>
            <param name="s">the text</param>
        </member>
        <member name="M:FarManager.IEditor.Redraw">
            <summary>
            Redraw editor
            </summary>
        </member>
        <member name="M:FarManager.IEditor.DeleteChar">
            <summary>
            Delete character under <see cref="P:FarManager.IEditor.Cursor"/>
            </summary>
        </member>
        <member name="M:FarManager.IEditor.DeleteLine">
            <summary>
            Delete current line
            </summary>
        </member>
        <member name="M:FarManager.IEditor.Close">
            <summary>
            Close editor
            </summary>
        </member>
        <member name="M:FarManager.IEditor.Save">
            <summary>
            Save file being edited
            </summary>
        </member>
        <member name="M:FarManager.IEditor.Save(System.String)">
            <summary>
            Save file being edited to FileName
            </summary>
        </member>
        <member name="M:FarManager.IEditor.Cr">
            <summary>
            Insert new line
            </summary>
        </member>
        <member name="M:FarManager.IEditor.Cr(System.Boolean)">
            <summary>
            Insert new line with indent
            </summary>
            <param name="Indent">do indent</param>
        </member>
        <member name="M:FarManager.IEditor.Open">
            <summary>
            Open editor
            </summary>
        </member>
        <member name="E:FarManager.IEditor.OnRedraw">
            <summary>
            Redraw event
            </summary>
        </member>
        <member name="E:FarManager.IEditor.AfterOpen">
            <summary>
            Editor is opened
            </summary>
        </member>
        <member name="E:FarManager.IEditor.BeforeSave">
            <summary>
            Event is fired before editorcontents is saved
            </summary>
        </member>
        <member name="E:FarManager.IEditor.AfterClose">
            <summary>
            Event is fired after editor closed
            </summary>
        </member>
        <member name="E:FarManager.IEditor.OnKey">
            <summary>
            Key pressed in editor
            </summary>
        </member>
        <member name="E:FarManager.IEditor.OnMouse">
            <summary>
            Mouse state is changed
            </summary>
        </member>
        <member name="P:FarManager.IEditor.ID">
            <summary>
            Internal identifier
            </summary>
        </member>
        <member name="P:FarManager.IEditor.TabSize">
            <summary>
            Size of tab symbol in spaces
            </summary>
        </member>
        <member name="P:FarManager.IEditor.ExpandTabs">
            <summary>
            Do expand tabs
            </summary>
        </member>
        <member name="P:FarManager.IEditor.Async">
            <summary>
            Return control to the calling function immediately after <see cref="M:FarManager.IEditor.Open"/>.
            When false - wait for user to close editor
            </summary>
        </member>
        <member name="P:FarManager.IEditor.DeleteOnClose">
            <summary>
            Delete directory with file when it is closed
            </summary>
        </member>
        <member name="P:FarManager.IEditor.DeleteOnlyFileOnClose">
            <summary>
            Delete only file <seealso cref="P:FarManager.IEditor.DeleteOnClose"/>
            </summary>
        </member>
        <member name="P:FarManager.IEditor.EnableSwitch">
            <summary>
            Enable switching to viewer
            </summary>
        </member>
        <member name="P:FarManager.IEditor.DisableHistory">
            <summary>
            Do not use editor history
            </summary>
        </member>
        <member name="P:FarManager.IEditor.WordDiv">
            <summary>
            Word delimiters specific to the current editor
            <seealso cref="P:FarManager.IFar.WordDiv"/>
            </summary>
        </member>
        <member name="P:FarManager.IEditor.Lines">
            <summary>
            Lines of editor
            </summary>
        </member>
        <member name="P:FarManager.IEditor.FileName">
            <summary>
            Name of file being edited
            </summary>
        </member>
        <member name="P:FarManager.IEditor.Window">
            <summary>
            Position of editor window
            </summary>
        </member>
        <member name="P:FarManager.IEditor.Cursor">
            <summary>
            Cursor position
            </summary>
        </member>
        <member name="P:FarManager.IEditor.Selection">
            <summary>
            Current selection
            </summary>
        </member>
        <member name="P:FarManager.IEditor.IsModal">
            <summary>
            Allow switch to other windows
            </summary>
        </member>
        <member name="P:FarManager.IEditor.IsNew">
            <summary>
            Do not open existing file
            </summary>
        </member>
        <member name="P:FarManager.IEditor.IsOpened">
            <summary>
            Is editor opened
            </summary>
        </member>
        <member name="P:FarManager.IEditor.Title">
            <summary>
            Title of editor
            </summary>
        </member>
        <member name="P:FarManager.IEditor.Text">
            <summary>
            Text of editor
            </summary>
        </member>
        <member name="T:FarManager.OpenFrom">
            <summary>
            From where IPluginMenuItem was opened from
            </summary>
        </member>
        <member name="F:FarManager.OpenFrom.DiskMenu">
            <summary>
            Disk menu
            </summary>
        </member>
        <member name="F:FarManager.OpenFrom.PluginsMenu">
            <summary>
            Plugins menu (F11)
            </summary>
        </member>
        <member name="F:FarManager.OpenFrom.FindList">
            <summary>
            Find list
            </summary>
        </member>
        <member name="F:FarManager.OpenFrom.ShortCut">
            <summary>
            Shortcut
            </summary>
        </member>
        <member name="F:FarManager.OpenFrom.CommandLine">
            <summary>
            Command line
            </summary>
        </member>
        <member name="F:FarManager.OpenFrom.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="F:FarManager.OpenFrom.Viewer">
            <summary>
            Viewer
            </summary>
        </member>
        <member name="T:FarManager.OnOpenPluginMenuItemDelegate">
            <summary>
            Plugin was opened
            </summary>
        </member>
        <member name="T:FarManager.IPluginMenuItem">
            <summary>
            Item of plugins menu (F11)
            </summary>
        </member>
        <member name="M:FarManager.IPluginMenuItem.FireOnOpen(FarManager.IPluginMenuItem,FarManager.OpenFrom)">
            <summary>
            Fire OnOpen event
            </summary>
            <param name="sender">IPluginMenuItem hich is opened</param>
            <param name="From">from where it is opened</param>
        </member>
        <member name="E:FarManager.IPluginMenuItem.OnOpen">
            <summary>
            Is fired when menu item is opened
            </summary>
        </member>
        <member name="P:FarManager.IPluginMenuItem.Name">
            <summary>
            Name of menu item (Caption)
            </summary>
        </member>
        <member name="T:FarManager.OnOpenPluginDiskMenuItemDelegate">
            <summary>
            Delegate for disk menu item
            </summary>
        </member>
        <member name="T:FarManager.IDiskMenuItem">
            <summary>
            Item of Far disk menu
            </summary>
        </member>
        <member name="M:FarManager.IDiskMenuItem.FireOnOpen(FarManager.IDiskMenuItem)">
            <summary>
            Fire Onopen event
            </summary>
            <param name="sender">IDiskMenuItem of menu</param>
        </member>
        <member name="P:FarManager.IDiskMenuItem.Name">
            <summary>
            Name (caption) of disk menu
            </summary>
        </member>
        <member name="P:FarManager.IDiskMenuItem.Number">
            <summary>
            Number of the item
            </summary>
        </member>
        <member name="E:FarManager.IDiskMenuItem.OnOpen">
            <summary>
            Event fired when item is opened
            </summary>
        </member>
        <member name="T:FarManager.IVersion">
            <summary>
            Version of FAR manager
            </summary>
        </member>
        <member name="P:FarManager.IVersion.Major">
            <summary>
            Major part (1 for 1.70 build 1973)
            </summary>
        </member>
        <member name="P:FarManager.IVersion.Minor">
            <summary>
            Minor part (70 for 1.70 build 1973)
            </summary>
        </member>
        <member name="P:FarManager.IVersion.Build">
            <summary>
            Build part (1973 for 1.70 build 1973)
            </summary>
        </member>
        <member name="T:FarManager.IPostParams">
            <summary>
            Parameters for posting key sequence
            </summary>
        </member>
        <member name="P:FarManager.IPostParams.IsOk">
            <summary>
            Posting successful
            </summary>
        </member>
        <member name="P:FarManager.IPostParams.Sequence">
            <summary>
            Sequence of key codes
            </summary>
        </member>
        <member name="P:FarManager.IPostParams.DisableOutput">
            <summary>
            Do not show UI elements while posting
            </summary>
        </member>
        <member name="T:FarManager.StringDelegate">
            <summary>
            Delegate which takes 1 string parameter
            </summary>
        </member>
        <member name="T:FarManager.IFar">
            <summary>
            The main interface of Far manager
            </summary>
        </member>
        <member name="M:FarManager.IFar.RegisterPrefix(System.String,FarManager.StringDelegate)">
            <summary>
            Register command line prefix
            </summary>
            <remarks>
            Call this function at plugin connection 
            if you want to handle command line prefixes.
            </remarks>
            <param name="Prefix">the prefix</param>
            <param name="handler">handler of command line</param>
        </member>
        <member name="M:FarManager.IFar.RegisterPluginsMenuItem(FarManager.IPluginMenuItem)">
            <summary>
            Adds menu item to the main plugin menu (shown by F11)
            <seealso cref="M:FarManager.IFar.UnregisterPluginsMenuItem(FarManager.IPluginMenuItem)"/>
            </summary>
            <param name="Item">the menuitem being registered</param>
        </member>
        <member name="M:FarManager.IFar.RegisterPluginsMenuItem(System.String,FarManager.OnOpenPluginMenuItemDelegate)">
            <summary>
            Create and add menu item to the main plugin menu (shown by F11)
            <seealso cref="M:FarManager.IFar.UnregisterPluginsMenuItem(FarManager.IPluginMenuItem)"/>
            </summary>
            <param name="Name">name of menu item</param>
            <param name="OnOpen">OnOpen event handler</param>
            <returns>newly created item</returns>
        </member>
        <member name="M:FarManager.IFar.UnregisterPluginsMenuItem(FarManager.IPluginMenuItem)">
            <summary>
            Unregister plugin menu item
            </summary>
            <param name="item">item being unregistered</param>
        </member>
        <member name="M:FarManager.IFar.CreatePluginsMenuItem">
            <summary>
            Create new plugin menu item
            <seealso cref="M:FarManager.IFar.RegisterPluginsMenuItem(FarManager.IPluginMenuItem)"/>
            <seealso cref="M:FarManager.IFar.UnregisterPluginsMenuItem(FarManager.IPluginMenuItem)"/>
            </summary>
            <returns>newly created plugin menu item</returns>
        </member>
        <member name="M:FarManager.IFar.Msg(System.String)">
            <summary>
            Show message box
            </summary>
            <param name="body">message to be shown</param>
            <returns>true if enter pressed</returns>
        </member>
        <member name="M:FarManager.IFar.Msg(System.String,System.String)">
            <summary>
            Show message
            </summary>
            <param name="body">message text</param>
            <param name="header">message header</param>
            <returns>true if enter pressed</returns>
        </member>
        <member name="M:FarManager.IFar.CreateMessage">
            <summary>
            Create IMessage implementation
            </summary>
        </member>
        <member name="M:FarManager.IFar.Run(System.String)">
             <summary>
             Run specified command line (works only with Far.Net registered prefixes)
             </summary>
            <param name="CmdLine">Command line</param>
        </member>
        <member name="M:FarManager.IFar.CreateInputBox">
            <summary>
            Create InputBox implementation
            </summary>
        </member>
        <member name="M:FarManager.IFar.CreateMenu">
            <summary>
            Create Menu implementation
            </summary>		
        </member>
        <member name="M:FarManager.IFar.CreateEditor">
            <summary>
            Create new editor
            </summary>
        </member>
        <member name="M:FarManager.IFar.CreateRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create new rectangle
            </summary>
        </member>
        <member name="M:FarManager.IFar.CreateStream(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create stream figure (for stream block for <see cref="P:FarManager.ISelection.Shape"/>)
            </summary>
        </member>
        <member name="M:FarManager.IFar.CreateKeySequence(System.String)">
            <summary>
            Sequence of key codes from string representations
            </summary>
        </member>
        <member name="M:FarManager.IFar.CreateList(System.Object[])">
            <summary>
            Create list from array
            </summary>
        </member>
        <member name="M:FarManager.IFar.PostKeySequence(System.Collections.IList,System.Boolean)">
            <summary>
            Play key sequence
            </summary>
        </member>
        <member name="M:FarManager.IFar.NameToKey(System.String)">
            <summary>
            Convert key string representation to the key code
            </summary>
        </member>
        <member name="M:FarManager.IFar.CreatePostParams(System.String,System.Boolean)">
            <summary>
            Create new post parameters
            </summary>
        </member>
        <member name="M:FarManager.IFar.Post(FarManager.IPostParams)">
            <summary>
            Post key sequence
            </summary>
        </member>
        <member name="M:FarManager.IFar.SaveScreen(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Save screen area 
            </summary>
        </member>
        <member name="M:FarManager.IFar.RestoreScreen(System.Int32)">
            <summary>
            Restore screen area
            </summary>
        </member>
        <member name="P:FarManager.IFar.PluginFolderPath">
            <summary>
            Path to folder where plugin dll situated
            </summary>
        </member>
        <member name="P:FarManager.IFar.hWnd">
            <summary>
            Windows handle of FAR
            </summary>
        </member>
        <member name="P:FarManager.IFar.Version">
            <summary>
            FAR version
            </summary>
        </member>
        <member name="P:FarManager.IFar.AnyEditor">
            <summary>
            Virtual editor instance. Subscribe to its events when you want be 
            informed about all editors events.
            </summary>
        </member>
        <member name="P:FarManager.IFar.WordDiv">
            <summary>
            String of word delimiters
            </summary>
        </member>
        <member name="P:FarManager.IFar.Clipboard">
            <summary>
            Clipboard contents
            </summary>		
        </member>
        <member name="P:FarManager.IFar.Editors">
            <summary>
            Set of currently opened editors
            </summary>
        </member>
        <member name="P:FarManager.IFar.Editor">
            <summary>
            Currentrly active editor
            </summary>
        </member>
        <member name="P:FarManager.IFar.Panel">
            <summary>
            Currentrly active panel
            </summary>
        </member>
        <member name="P:FarManager.IFar.AnotherPanel">
            <summary>
            Passive panel
            </summary>
        </member>
        <member name="T:FarManager.Mouse">
            <summary>
            Represents mouse Event
            </summary>
        </member>
        <member name="M:FarManager.Mouse.#ctor">
            <summary>
            Create new mouse event data
            </summary>
        </member>
        <member name="F:FarManager.Mouse.Line">
            <summary>
            Line where ecent occurs
            </summary>
        </member>
        <member name="F:FarManager.Mouse.Pos">
            <summary>
            Position in the line
            </summary>
        </member>
        <member name="F:FarManager.Mouse.Left">
            <summary>
            Left button down
            </summary>
        </member>
        <member name="F:FarManager.Mouse.Right">
            <summary>
            Right button down
            </summary>
        </member>
        <member name="F:FarManager.Mouse.Click">
            <summary>
            Button clicked
            </summary>
        </member>
        <member name="F:FarManager.Mouse.DoubleClick">
            <summary>
            Double clicked
            </summary>
        </member>
        <member name="F:FarManager.Mouse.Moved">
            <summary>
            Moved
            </summary>
        </member>
        <member name="F:FarManager.Mouse.Wheeled">
            <summary>
            Mouse wheel rotated
            </summary>
        </member>
        <member name="T:FarManager.IMenuItem">
            <summary>
            Item os <see cref="T:FarManager.IMenu"/>
            </summary>
        </member>
        <member name="P:FarManager.IMenuItem.Text">
            <summary>
            Text of menu item
            </summary>
        </member>
        <member name="P:FarManager.IMenuItem.Selected">
            <summary>
            Is menu item selected
            </summary>
        </member>
        <member name="P:FarManager.IMenuItem.Checked">
            <summary>
            Is menu item checked
            </summary>
        </member>
        <member name="P:FarManager.IMenuItem.IsSeparator">
            <summary>
            Is menu item separator
            </summary>
        </member>
        <member name="E:FarManager.IMenuItem.OnClick">
            <summary>
            Event raised when menu item is clicked
            </summary>
        </member>
        <member name="T:FarManager.IMenuItems">
            <summary>
            List of menu item
            </summary>
        </member>
        <member name="M:FarManager.IMenuItems.Add(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Add menu item to list
            </summary>
            <param name="Text"><see cref="P:FarManager.IMenuItem.Text"/></param>
            <param name="Selected"><see cref="P:FarManager.IMenuItem.Selected"/></param>
            <param name="Checked"><see cref="P:FarManager.IMenuItem.Checked"/></param>
            <param name="IsSeparator"><see cref="P:FarManager.IMenuItem.IsSeparator"/></param>
            <returns>new menu item</returns>
        </member>
        <member name="M:FarManager.IMenuItems.Add(System.String,System.EventHandler)">
            <summary>
            Add menu item to list
            </summary>
            <param name="Text"><see cref="P:FarManager.IMenuItem.Text"/></param>
            <param name="OnClick"><see cref="E:FarManager.IMenuItem.OnClick"/></param>
            <returns>new menu item</returns>
        </member>
        <member name="M:FarManager.IMenuItems.Add(System.String)">
            <summary>
            Add menu item to list
            </summary>
            <param name="Text"><see cref="P:FarManager.IMenuItem.Text"/></param>
            <returns>new menu item</returns>
        </member>
        <member name="M:FarManager.IMenuItems.Add(System.String,System.Boolean)">
            <summary>
            Add menu item to list
            </summary>
            <param name="Text"><see cref="P:FarManager.IMenuItem.Text"/></param>
            <param name="Selected"><see cref="P:FarManager.IMenuItem.Selected"/></param>
            <returns>new menu item</returns>
        </member>
        <member name="M:FarManager.IMenuItems.Add(System.String,System.Boolean,System.Boolean)">
            <summary>
            Add menu item to list
            </summary>
            <param name="Text"><see cref="P:FarManager.IMenuItem.Text"/></param>
            <param name="Selected"><see cref="P:FarManager.IMenuItem.Selected"/></param>
            <param name="Checked"><see cref="P:FarManager.IMenuItem.Checked"/></param>
            <returns>new menu item</returns>
        </member>
        <member name="T:FarManager.IMenu">
            <summary>
            menu 
            </summary>
        </member>
        <member name="M:FarManager.IMenu.Show">
            <summary>
            Show menu
            </summary>
            <returns>menu item was succesfully selected 
            (otherwise cancelled)</returns>
        </member>
        <member name="E:FarManager.IMenu.OnClick">
            <summary>
            Event is raised when menu item is clicked
            </summary>
        </member>
        <member name="P:FarManager.IMenu.X">
            <summary>
            X-position
            </summary>
        </member>
        <member name="P:FarManager.IMenu.Y">
            <summary>
            Y-position
            </summary>
        </member>
        <member name="P:FarManager.IMenu.MaxHeight">
            <summary>
            Maximal height
            </summary>
        </member>
        <member name="P:FarManager.IMenu.Title">
            <summary>
            Title of menu
            </summary>
        </member>
        <member name="P:FarManager.IMenu.Bottom">
            <summary>
            Bottom line text
            </summary>
        </member>
        <member name="P:FarManager.IMenu.BreakKeys">
            <summary>
            List of keycodes which stops item selection process
            </summary>
        </member>
        <member name="P:FarManager.IMenu.Items">
            <summary>
            menu items
            </summary>
        </member>
        <member name="P:FarManager.IMenu.Selected">
            <summary>
            Selected item index
            </summary>
        </member>
        <member name="P:FarManager.IMenu.BreakCode">
            <summary>
            <see cref="P:FarManager.IMenu.BreakKeys"/> index of key interrupted 
            selection process
            </summary>
        </member>
        <member name="P:FarManager.IMenu.ShowAmpersands">
            <summary>
            Show ampersands in menu items or used 
            as accelerator character
            </summary>
        </member>
        <member name="P:FarManager.IMenu.WrapCursor">
            <summary>
            Cursor will go to upper position if
            is is at downmost position and down is pressed 
            </summary>
        </member>
        <member name="P:FarManager.IMenu.AutoAssignHotkeys">
            <summary>
            Assign hotkeys automatically
            </summary>
        </member>
        <member name="P:FarManager.IMenu.ReverseAutoAssign">
            <summary>
            Assign hotkeys automatically from bottom
            </summary>
        </member>
        <member name="T:FarManager.IFile">
            <summary>
            Filesystem item
            </summary>
        </member>
        <member name="P:FarManager.IFile.Path">
            <summary>
            Full path
            </summary>
        </member>
        <member name="P:FarManager.IFile.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:FarManager.IFile.IsFolder">
            <summary>
            Is the item folder
            </summary>
        </member>
        <member name="P:FarManager.IFile.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:FarManager.IFile.Owner">
            <summary>
            Owner
            </summary>
        </member>
        <member name="P:FarManager.IFile.AlternateName">
            <summary>
            Alternate name
            </summary>
        </member>
        <member name="P:FarManager.IFile.CreationTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:FarManager.IFile.LastAccessTime">
            <summary>
            Last access time
            </summary>
        </member>
        <member name="P:FarManager.IFile.Size">
            <summary>
            Size of file
            </summary>
        </member>
        <member name="P:FarManager.IFile.IsReadOnly">
            <summary>
            Is file readonly
            </summary>
        </member>
        <member name="P:FarManager.IFile.IsHidden">
            <summary>
            is file hidden
            </summary>
        </member>
        <member name="P:FarManager.IFile.IsVolume">
            <summary>
            is the file volume label
            </summary>
        </member>
        <member name="P:FarManager.IFile.IsSystem">
            <summary>
            System attribute
            </summary>
        </member>
        <member name="P:FarManager.IFile.IsDirectory">
            <summary>
            Directory attribute
            </summary>
        </member>
        <member name="P:FarManager.IFile.IsArchive">
            <summary>
            Archive attribute
            </summary>
        </member>
        <member name="P:FarManager.IFile.IsAlias">
            <summary>
            Alias attribute
            </summary>
        </member>
        <member name="P:FarManager.IFile.IsCompressed">
            <summary>
            Compressed attribute
            </summary>
        </member>
        <member name="P:FarManager.IFile.IsEncrypted">
            <summary>
            Encrypted attribute
            </summary>
        </member>
        <member name="P:FarManager.IFile.Parent">
            <summary>
            Parent folder
            </summary>
        </member>
        <member name="T:FarManager.IFolder">
            <summary>
            Folder of file system
            </summary>
        </member>
        <member name="P:FarManager.IFolder.Files">
            <summary>
            File items in the folder
            </summary>
        </member>
        <member name="T:FarManager.PanelType">
            <summary>
            Type of panel
            </summary>
        </member>
        <member name="F:FarManager.PanelType.File">
            <summary>
            File list
            </summary>
        </member>
        <member name="F:FarManager.PanelType.Tree">
            <summary>
            File tree
            </summary>
        </member>
        <member name="F:FarManager.PanelType.QView">
            <summary>
            Quick view
            </summary>
        </member>
        <member name="F:FarManager.PanelType.Info">
            <summary>
            Information
            </summary>
        </member>
        <member name="T:FarManager.IPanel">
            <summary>
            Panel of the Far Manager
            </summary>
        </member>
        <member name="P:FarManager.IPanel.IsPlugin">
            <summary>
            Is it panel plugin
            </summary>
        </member>
        <member name="P:FarManager.IPanel.IsVisible">
            <summary>
            Is it visible
            </summary>
        </member>
        <member name="P:FarManager.IPanel.Top">
            <summary>
            Topmost file of panel
            </summary>
        </member>
        <member name="P:FarManager.IPanel.Current">
            <summary>
            Currently selected file of panel
            </summary>
        </member>
        <member name="P:FarManager.IPanel.ViewMode">
            <summary>
            View mode number
            </summary>
        </member>
        <member name="P:FarManager.IPanel.Contents">
            <summary>
            Folder displayed by panel
            </summary>
        </member>
        <member name="P:FarManager.IPanel.Selected">
            <summary>
            List of selected files
            </summary>
        </member>
        <member name="P:FarManager.IPanel.Type">
            <summary>
            Type of panel
            </summary>
        </member>
    </members>
</doc>
