
# FarNet module *RightControl*

*********************************************************************
## Synopsis

This tool alters some operations in editors, edit controls, and the command
line. They are: *Step*, *Select*, *Delete* by words, *Go*, *Select* to *smart
home*. New actions are similar to what many popular editors do on stepping,
selecting, deleting by words, and etc. Example: Visual Studio editor, Word,
WordPad, etc.

**Project**

 * Source: <http://code.google.com/p/farnet>
 * Author: Roman Kuzmin

*********************************************************************
## Installation

**Requirements**

 * Far Manager 3.0.3842
 * Plugin FarNet 5.0.48

**Instructions**

How to get, install, and update from the NuGet package *FarNet.RightControl*

In English: <https://farnet.googlecode.com/svn/trunk/Install-FarNet.en.txt>

In Russian: <https://farnet.googlecode.com/svn/trunk/Install-FarNet.ru.txt>

*********************************************************************
## Commands

The module mostly works via commands called from macros by the macro function
`Plugin.Call()`.

### Word commands

- `step-left`
- `step-right`
- `select-left`
- `select-right`
- `delete-left`
- `delete-right`
- `vertical-left`
- `vertical-right`

### Smart home commands

- `go-to-smart-home`
- `select-to-smart-home`

Example macro for the Editor area:

    Plugin.Call("10435532-9BB3-487B-A045-B0E6ECAAB6BC", "RightControl: go-to-smart-home")

*RightControl.macro.lua* provides predefined typical macros.

### Known issue and workaround

Until the issue Mantis 1465 is resolved `[ShiftLeft]` and `[ShiftRight]` work
funny in dialogs and the command line when selection is set by the module.

Workaround: use macros `[ShiftLeft]` and `[ShiftRight]` (not in the editor!)
and bind them to the commands `vertical-left` and `vertical-right`.
*RightControl.macro.lua* includes these macros.

*********************************************************************
## Settings

Module settings panel: `[F11] \ FarNet \ Settings \ RightControl`

`Regex`
: A regular expression pattern that defines text break points.

**Regex examples**

Default pattern. Breaks are very similar to Visual Studio:

    ^ | $ | (?<=\b|\s)\S

Pattern with breaks similar to Word/WordPad. "_" breaks, too:

    ^ | $ | (?<=\b|\s)\S | (?<=[^_])_ | (?<=_)[^_\s]

Default pattern with two more breaks: letter case and number breaks:

    ^ | $ | (?<=\b|\s)\S | (?<=\p{Ll})\p{Lu} | (?<=\D)\d | (?<=\d)[^\d\s]

The same pattern written with inline comments. All the text below is a valid
regular expression pattern that can be stored in settings just like that:

~~~
^ | $ # start or end of line
|
(?<=\b|\s)\S # not a space with a word bound or a space before
|
(?<=\p{Ll})\p{Lu} # an upper case letter with a lower case letter before
|
(?<=\D)\d | (?<=\d)[^\d\s] # a digit/not-digit with a not-digit/digit before
~~~

*********************************************************************
